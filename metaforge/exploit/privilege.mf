// Funzioni per escalation privilegi
struct TokenPrivileges {
    ptr token;
    u32 privileges;
}

fn enable_privilege(ptr privilege_name) -> bool {
    let token = alloc(sizeof(HANDLE));
    let process = GetCurrentProcess();
    
    // Open process token
    let opened = OpenProcessToken(
        process,
        0xF01FF,  // TOKEN_ALL_ACCESS
        token
    );
    
    if !opened {
        free(token);
        ret false;
    }
    
    // Lookup privilege value
    let luid = alloc(sizeof(LUID));
    let looked_up = LookupPrivilegeValueA(
        null,
        privilege_name,
        luid
    );
    
    if !looked_up {
        CloseHandle(deref token);
        free(token);
        free(luid);
        ret false;
    }
    
    // Enable privilege
    let tp = alloc(sizeof(TOKEN_PRIVILEGES));
    deref tp.PrivilegeCount = 1;
    deref tp.Privileges[0].Luid = deref luid;
    deref tp.Privileges[0].Attributes = 2;  // SE_PRIVILEGE_ENABLED
    
    let adjusted = AdjustTokenPrivileges(
        deref token,
        false,
        tp,
        sizeof(TOKEN_PRIVILEGES),
        null,
        null
    );
    